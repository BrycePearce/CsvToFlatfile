import { readFile } from "fs/promises";
import { parseCsv } from "../index.js";

import "dotenv/config.js";

// const loadCsvWithHeaders = async () => {
//     let importedCsv: string;
//     try {
//         importedCsv = await readFile("./testData/zillow.csv", 'utf8')
//     } catch {
//         throw new Error('Failed to load the CSV file.');
//     }

//     if (!importedCsv) return null;

//     const parsedCsv = await parseCsv({ csv: importedCsv, hasColumnHeaders: true, workbookName: 'Zillow', sheetName: 'coolSheet#1', flatfileKey: process.env?.flatfile ?? '' })
//     console.log(parsedCsv)
// }

// const loadCsvWithoutHeaders = async () => {
//     let importedCsv: string;
//     try {
//         importedCsv = await readFile("./testData/example.csv", 'utf8')
//     } catch {
//         throw new Error('Failed to load the CSV file.');
//     }

//     if (!importedCsv) return null;

//     const parsedCsv = parseCsv({ csv: importedCsv, hasColumnHeaders: false, workbookName: 'TestData', sheetName: 'Sheet', columnHeaders: ['date', 'measurementTotal', 'measurement', 'product', 'name', 'deliveryPoint'], flatfileKey: process.env?.flatfile ?? '' })
//     console.log('parsedCsv', parsedCsv)
// }

const loadCsvWithAutoGeneratedHeaders = async () => {
    let importedCsv: string;
    try {
        importedCsv = await readFile("./testData/nile.csv", 'utf8')
    } catch {
        throw new Error('Failed to load the CSV file.');
    }

    if (!importedCsv) return null;

    const parsedCsv = parseCsv({ csv: importedCsv, hasColumnHeaders: true, workbookName: 'TestData', sheetName: 'The Nile through time', flatfileKey: process.env?.flatfile ?? '' })
    console.log('parsedCsv', parsedCsv)
}


// loadCsvWithHeaders()
// loadCsvWithoutHeaders()
loadCsvWithAutoGeneratedHeaders()