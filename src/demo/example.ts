import { readFile } from "fs/promises";
import { convertCsvToWorkbook } from "../index.js";

import "dotenv/config.js";

// const loadCsvWithHeaders = async () => {
//     let importedCsv: string;
//     try {
//         importedCsv = await readFile("./testData/zillow.csv", 'utf8')
//     } catch {
//         throw new Error('Failed to load the CSV file.');
//     }

//     if (!importedCsv) return null;

//     const parsedCsv = await convertCsvToWorkbook({ csv: importedCsv, hasColumnHeaders: true, workbookName: 'Zillow', sheetName: 'coolSheet#1', flatfileKey: process.env?.flatfile ?? '' })
//     console.log(parsedCsv)
// }

// const loadCsvWithoutHeaders = async () => {
//     let importedCsv: string;
//     try {
//         importedCsv = await readFile("./testData/example.csv", 'utf8')
//     } catch {
//         throw new Error('Failed to load the CSV file.');
//     }

//     if (!importedCsv) return null;

//     const parsedCsv = convertCsvToWorkbook({ csv: importedCsv, hasColumnHeaders: false, workbookName: 'TestData', sheetName: 'Sheet', columnHeaders: ['date', 'measurementTotal', 'measurement', 'product', 'name', 'deliveryPoint'], flatfileKey: process.env?.flatfile ?? '' })
//     console.log('parsedCsv', parsedCsv)
// }

const loadCsvWithAutoGeneratedHeaders = async () => {
    let importedCsv: string;
    try {
        importedCsv = await readFile("./testData/nile.csv", 'utf8')
    } catch {
        throw new Error('Failed to load the CSV file.');
    }

    if (!importedCsv) return null;

    const parsedCsv = convertCsvToWorkbook({ csv: importedCsv, hasColumnHeaders: true, workbookName: 'TestData', sheetName: 'The Nile through time', flatfileKey: process.env?.flatfile ?? '' })
    console.log('parsedCsv', parsedCsv)
}

// const loadCsvWithCustomFieldTypes = async () => {
//     let importedCsv: string;
//     try {
//         importedCsv = await readFile("./testData/nile.csv", 'utf8')
//     } catch {
//         throw new Error('Failed to load the CSV file.');
//     }

//     if (!importedCsv) return null;

//     const parsedCsv = convertCsvToWorkbook({
//         csv: importedCsv,
//         hasColumnHeaders: true,
//         workbookName: 'TestData',
//         sheetName: 'Nile with basic field types',
//         flatfileKey: process.env?.flatfile ?? '',
//         fieldTypes: [{ type: "number" }, { type: "string" }]
//     });
//     console.log('parsedCsv', parsedCsv)
// }

// const loadCsvWithReferenceAndEnum = async () => {
//     let importedCsv: string;
//     try {
//         importedCsv = await readFile("./testData/nile.csv", 'utf8')
//     } catch {
//         throw new Error('Failed to load the CSV file.');
//     }

//     if (!importedCsv) return null;

//     const parsedCsv = convertCsvToWorkbook({
//         csv: importedCsv,
//         hasColumnHeaders: true,
//         workbookName: 'TestData',
//         sheetName: 'Nile with a reference and enum field type',
//         flatfileKey: process.env?.flatfile ?? '',
//         sheetAccess: ["add", "edit", "delete", "import"],
//         fieldTypes: [{
//             type: "reference",
//             config: {
//                 ref: "parents",
//                 key: "email",
//                 relationship: "has-one"
//             }
//         }, {
//             type: "enum",
//             config: {
//                 allow_custom: false,
//                 options: [{
//                     value: "active",
//                     label: "Active"
//                 }, {
//                     value: "inactive",
//                     label: "Disabled",
//                     color: "#ff0000",
//                     icon: "fa fa-ban",
//                     metadata: {
//                         foo: "bar"
//                     }
//                 }]
//             }
//         }]
//     });
//     console.log('parsedCsv', parsedCsv)
// }


// loadCsvWithHeaders()
// loadCsvWithoutHeaders()
loadCsvWithAutoGeneratedHeaders()
// loadCsvWithReference();
// loadCsvWithReferenceAndEnum();